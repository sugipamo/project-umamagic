from django.test import TestCase

from apps.db_netkeiba_tips.models import HorseRacingTipParserForPageYoso, HorseRacingTipParserForPageYosoCp, HorseRacingTipParserForPageYosoPro
from apps.db_netkeiba_tips.models import HorseRacingTip
from apps.web_netkeiba_pagesources.models import PageYoso, PageYosoCp, PageYosoPro

def make_check_values():
    for tip in HorseRacingTip.objects.all():
        print(f'check_values(self, "{tip.race_id}", "{tip.author.name}", {tip.horse_number}, "{tip.mark.mark}")')

def check_values(self, race_id, author, horse_number, mark):
    tip = HorseRacingTip.objects.get(author__name=author, horse_number=horse_number)
    self.assertTrue(tip.race_id == race_id)
    self.assertTrue(tip.author.name == author)
    self.assertTrue(tip.horse_number == horse_number)
    self.assertTrue(tip.mark.mark == mark)

class HorseRacingTipParserForPageNarTest(TestCase):
    def test_new_tips(self):
        page_source = PageYosoPro.make_dummy_instance(category='nar', race_id='202444070902')
        self.assertTrue(HorseRacingTipParserForPageYosoPro(page_source=page_source).parser_init() is not None)
        HorseRacingTipParserForPageYosoPro.objects.all().delete()
        HorseRacingTipParserForPageYosoPro.new_tips()
        self.assertTrue(HorseRacingTipParserForPageYosoPro.objects.all().exists())
        page_source = PageYosoCp.make_dummy_instance(category='nar', race_id='202444070902')
        self.assertTrue(HorseRacingTipParserForPageYosoCp(page_source=page_source).parser_init() is not None)
        HorseRacingTipParserForPageYosoCp.objects.all().delete()
        HorseRacingTipParserForPageYosoCp.new_tips()
        self.assertTrue(HorseRacingTipParserForPageYosoCp.objects.all().exists())
        page_source = PageYoso.make_dummy_instance(category='nar', race_id='202444070902')
        self.assertTrue(HorseRacingTipParserForPageYoso(page_source=page_source).parser_init() is not None)
        HorseRacingTipParserForPageYoso.objects.all().delete()
        HorseRacingTipParserForPageYoso.new_tips()
        self.assertTrue(HorseRacingTipParserForPageYoso.objects.all().exists())

        check_values(self, "202444070902", "浅野靖典", 13, "First")
        check_values(self, "202444070902", "浅野靖典", 3, "Second")
        check_values(self, "202444070902", "浅野靖典", 12, "Third")
        check_values(self, "202444070902", "浅野靖典", 1, "Fourth")
        check_values(self, "202444070902", "浅野靖典", 8, "Star")
        check_values(self, "202444070902", "CP予想", 13, "First")
        check_values(self, "202444070902", "CP予想", 5, "Second")
        check_values(self, "202444070902", "CP予想", 3, "Third")
        check_values(self, "202444070902", "CP予想", 8, "Fourth")
        check_values(self, "202444070902", "本多必勝", 13, "First")
        check_values(self, "202444070902", "本多必勝", 5, "Second")
        check_values(self, "202444070902", "本多必勝", 3, "Third")
        check_values(self, "202444070902", "本多必勝", 2, "Fourth")
        check_values(self, "202444070902", "赤石龍之介", 3, "First")
        check_values(self, "202444070902", "赤石龍之介", 13, "Second")
        check_values(self, "202444070902", "赤石龍之介", 5, "Third")
        check_values(self, "202444070902", "赤石龍之介", 4, "Fourth")
        check_values(self, "202444070902", "大越カイジ", 3, "First")
        check_values(self, "202444070902", "大越カイジ", 5, "Second")
        check_values(self, "202444070902", "大越カイジ", 14, "Fourth")
        check_values(self, "202444070902", "大越カイジ", 4, "Fourth")
        check_values(self, "202444070902", "大越カイジ", 1, "Fourth")
        check_values(self, "202444070902", "大越カイジ", 6, "Fourth")
        check_values(self, "202444070902", "差追", 2, "Third")
        check_values(self, "202444070902", "血統", 2, "First")
        check_values(self, "202444070902", "上昇度", 3, "Second")
        check_values(self, "202444070902", "逃先", 3, "Second")
        check_values(self, "202444070902", "差追", 3, "Fourth")
        check_values(self, "202444070902", "騎手", 4, "First")
        check_values(self, "202444070902", "逃先", 5, "First")
        check_values(self, "202444070902", "差追", 5, "First")
        check_values(self, "202444070902", "逃先", 6, "Third")
        check_values(self, "202444070902", "調教師", 6, "Fourth")
        check_values(self, "202444070902", "上昇度", 8, "First")
        check_values(self, "202444070902", "調教師", 8, "Second")
        check_values(self, "202444070902", "騎手", 10, "Third")
        check_values(self, "202444070902", "血統", 10, "Third")
        check_values(self, "202444070902", "騎手", 11, "Second")
        check_values(self, "202444070902", "血統", 11, "Second")
        check_values(self, "202444070902", "騎手", 12, "Fourth")
        check_values(self, "202444070902", "血統", 12, "Fourth")
        check_values(self, "202444070902", "上昇度", 13, "Third")
        check_values(self, "202444070902", "逃先", 13, "Fourth")
        check_values(self, "202444070902", "差追", 13, "Second")
        check_values(self, "202444070902", "調教師", 13, "First")
        check_values(self, "202444070902", "上昇度", 14, "Fourth")
        check_values(self, "202444070902", "調教師", 14, "Third")
        check_values(self, "202444070902", "rising", 3, "First")
        check_values(self, "202444070902", "rising", 5, "Second")
        check_values(self, "202444070902", "rising", 8, "Third")
        check_values(self, "202444070902", "rising", 13, "Fourth")
        check_values(self, "202444070902", "precede", 1, "Fourth")
        check_values(self, "202444070902", "precede", 3, "Second")
        check_values(self, "202444070902", "precede", 5, "First")
        check_values(self, "202444070902", "precede", 13, "Third")
        check_values(self, "202444070902", "spurt", 3, "Second")
        check_values(self, "202444070902", "spurt", 5, "First")
        check_values(self, "202444070902", "spurt", 8, "Fourth")
        check_values(self, "202444070902", "spurt", 13, "Third")
        check_values(self, "202444070902", "jockey", 3, "Second")
        check_values(self, "202444070902", "jockey", 5, "First")
        check_values(self, "202444070902", "jockey", 8, "Third")
        check_values(self, "202444070902", "jockey", 13, "Fourth")
        check_values(self, "202444070902", "trainer", 3, "Fourth")
        check_values(self, "202444070902", "trainer", 5, "Second")
        check_values(self, "202444070902", "trainer", 8, "Third")
        check_values(self, "202444070902", "trainer", 13, "First")
        check_values(self, "202444070902", "pedigree", 3, "Second")
        check_values(self, "202444070902", "pedigree", 5, "First")
        check_values(self, "202444070902", "pedigree", 8, "Third")
        check_values(self, "202444070902", "pedigree", 13, "Fourth")
        check_values(self, "202444070902", "浅野", 1, "Fourth")
        check_values(self, "202444070902", "浅野", 3, "Second")
        check_values(self, "202444070902", "浅野", 8, "Star")
        check_values(self, "202444070902", "浅野", 12, "Third")
        check_values(self, "202444070902", "浅野", 13, "First")



class HorseRacingTipParserForPageYosoProNarTest(TestCase):
    def test_new_tips(self):
        page_source = PageYosoPro.make_dummy_instance(category='nar', race_id='202444070902')
        self.assertTrue(HorseRacingTipParserForPageYosoPro(page_source=page_source).parser_init() is not None)
        HorseRacingTipParserForPageYosoPro.objects.all().delete()
        HorseRacingTipParserForPageYosoPro.new_tips()
        self.assertTrue(HorseRacingTipParserForPageYosoPro.objects.all().exists())

        check_values(self, "202444070902", "浅野靖典", 13, "First")
        check_values(self, "202444070902", "浅野靖典", 3, "Second")
        check_values(self, "202444070902", "浅野靖典", 12, "Third")
        check_values(self, "202444070902", "浅野靖典", 1, "Fourth")
        check_values(self, "202444070902", "浅野靖典", 8, "Star")
        check_values(self, "202444070902", "CP予想", 13, "First")
        check_values(self, "202444070902", "CP予想", 5, "Second")
        check_values(self, "202444070902", "CP予想", 3, "Third")
        check_values(self, "202444070902", "CP予想", 8, "Fourth")
        check_values(self, "202444070902", "本多必勝", 13, "First")
        check_values(self, "202444070902", "本多必勝", 5, "Second")
        check_values(self, "202444070902", "本多必勝", 3, "Third")
        check_values(self, "202444070902", "本多必勝", 2, "Fourth")
        check_values(self, "202444070902", "赤石龍之介", 3, "First")
        check_values(self, "202444070902", "赤石龍之介", 13, "Second")
        check_values(self, "202444070902", "赤石龍之介", 5, "Third")
        check_values(self, "202444070902", "赤石龍之介", 4, "Fourth")
        check_values(self, "202444070902", "大越カイジ", 3, "First")
        check_values(self, "202444070902", "大越カイジ", 5, "Second")
        check_values(self, "202444070902", "大越カイジ", 14, "Fourth")
        check_values(self, "202444070902", "大越カイジ", 4, "Fourth")
        check_values(self, "202444070902", "大越カイジ", 1, "Fourth")
        check_values(self, "202444070902", "大越カイジ", 6, "Fourth")


class HorseRacingTipParserForPageYosoProRaceTest(TestCase):
    def test_new_tips(self):
        page_source = PageYosoPro.make_dummy_instance(category='race', race_id='202408040811')
        self.assertTrue(HorseRacingTipParserForPageYosoPro(page_source=page_source).parser_init() is not None)
        HorseRacingTipParserForPageYosoPro.objects.all().delete()
        HorseRacingTipParserForPageYosoPro.new_tips()
        self.assertTrue(HorseRacingTipParserForPageYosoPro.objects.all().exists())

        check_values(self, "202408040811", "丹下日出夫", 4, "First")
        check_values(self, "202408040811", "丹下日出夫", 2, "Second")
        check_values(self, "202408040811", "丹下日出夫", 12, "Third")
        check_values(self, "202408040811", "丹下日出夫", 3, "Star")
        check_values(self, "202408040811", "丹下日出夫", 1, "Fourth")
        check_values(self, "202408040811", "丹下日出夫", 10, "Fourth")
        check_values(self, "202408040811", "丹下日出夫", 13, "Fourth")
        check_values(self, "202408040811", "須田鷹雄", 7, "First")
        check_values(self, "202408040811", "須田鷹雄", 10, "Second")
        check_values(self, "202408040811", "須田鷹雄", 12, "Third")
        check_values(self, "202408040811", "須田鷹雄", 2, "Star")
        check_values(self, "202408040811", "須田鷹雄", 1, "Fourth")
        check_values(self, "202408040811", "須田鷹雄", 3, "Fourth")
        check_values(self, "202408040811", "須田鷹雄", 4, "Fourth")
        check_values(self, "202408040811", "須田鷹雄", 11, "Fourth")
        check_values(self, "202408040811", "コンピューター予想", 2, "First")
        check_values(self, "202408040811", "コンピューター予想", 4, "Second")
        check_values(self, "202408040811", "コンピューター予想", 1, "Third")
        check_values(self, "202408040811", "コンピューター予想", 12, "Fourth")
        check_values(self, "202408040811", "netkeiba関西本紙", 12, "First")
        check_values(self, "202408040811", "netkeiba関西本紙", 7, "Second")
        check_values(self, "202408040811", "netkeiba関西本紙", 5, "Third")
        check_values(self, "202408040811", "netkeiba関西本紙", 1, "Star")
        check_values(self, "202408040811", "netkeiba関西本紙", 2, "Fourth")
        check_values(self, "202408040811", "netkeiba関西本紙", 9, "Fourth")
        check_values(self, "202408040811", "netkeiba関西本紙", 10, "Fourth")
        check_values(self, "202408040811", "鈴木麻優", 2, "First")
        check_values(self, "202408040811", "鈴木正", 2, "First")
        check_values(self, "202408040811", "鈴木正", 4, "Second")
        check_values(self, "202408040811", "鈴木正", 7, "Third")
        check_values(self, "202408040811", "鈴木正", 3, "Star")
        check_values(self, "202408040811", "鈴木正", 1, "Fourth")
        check_values(self, "202408040811", "鈴木正", 10, "Fourth")
        check_values(self, "202408040811", "伊吹雅也", 10, "First")
        check_values(self, "202408040811", "伊吹雅也", 3, "Second")
        check_values(self, "202408040811", "伊吹雅也", 1, "Third")
        check_values(self, "202408040811", "伊吹雅也", 2, "Star")
        check_values(self, "202408040811", "伊吹雅也", 4, "Fourth")
        check_values(self, "202408040811", "伊吹雅也", 9, "Fourth")
        check_values(self, "202408040811", "netkeibaデスク", 12, "First")
        check_values(self, "202408040811", "netkeibaデスク", 7, "Second")
        check_values(self, "202408040811", "netkeibaデスク", 10, "Third")
        check_values(self, "202408040811", "netkeibaデスク", 5, "Star")
        check_values(self, "202408040811", "netkeibaデスク", 2, "Fourth")
        check_values(self, "202408040811", "netkeibaデスク", 3, "Fourth")
        check_values(self, "202408040811", "netkeibaデスク", 4, "Fourth")
        check_values(self, "202408040811", "小林誠", 3, "First")
        check_values(self, "202408040811", "小林誠", 7, "Second")
        check_values(self, "202408040811", "小林誠", 5, "Third")
        check_values(self, "202408040811", "小林誠", 4, "Star")
        check_values(self, "202408040811", "小林誠", 2, "Fourth")
        check_values(self, "202408040811", "小林誠", 10, "Fourth")
        check_values(self, "202408040811", "小林誠", 12, "Fourth")
        check_values(self, "202408040811", "藤村和彦", 12, "First")
        check_values(self, "202408040811", "藤村和彦", 5, "Second")
        check_values(self, "202408040811", "藤村和彦", 9, "Third")
        check_values(self, "202408040811", "藤村和彦", 7, "Star")
        check_values(self, "202408040811", "藤村和彦", 2, "Fourth")
        check_values(self, "202408040811", "藤村和彦", 4, "Fourth")
        check_values(self, "202408040811", "藤村和彦", 13, "Fourth")
        check_values(self, "202408040811", "大石川大二郎", 2, "First")
        check_values(self, "202408040811", "大石川大二郎", 3, "Second")
        check_values(self, "202408040811", "大石川大二郎", 7, "Third")
        check_values(self, "202408040811", "大石川大二郎", 12, "Star")
        check_values(self, "202408040811", "大石川大二郎", 1, "Fourth")
        check_values(self, "202408040811", "大石川大二郎", 4, "Fourth")
        check_values(self, "202408040811", "大石川大二郎", 13, "Fourth")
        check_values(self, "202408040811", "田沼亨", 10, "First")
        check_values(self, "202408040811", "田沼亨", 3, "Second")
        check_values(self, "202408040811", "田沼亨", 4, "Third")
        check_values(self, "202408040811", "田沼亨", 9, "Star")
        check_values(self, "202408040811", "田沼亨", 2, "Fourth")
        check_values(self, "202408040811", "田沼亨", 7, "Fourth")
        check_values(self, "202408040811", "田沼亨", 12, "Fourth")

class HorseRacingTipParserForPageYosoCPNarTest(TestCase):
    def test_new_tips(self):
        page_source = PageYosoCp.make_dummy_instance(category='nar', race_id='202444070902')
        self.assertTrue(HorseRacingTipParserForPageYosoCp(page_source=page_source).parser_init() is not None)
        HorseRacingTipParserForPageYosoCp.objects.all().delete()
        HorseRacingTipParserForPageYosoCp.new_tips()
        self.assertTrue(HorseRacingTipParserForPageYosoCp.objects.all().exists())

        check_values(self, "202444070902", "差追", 2, "Third")
        check_values(self, "202444070902", "血統", 2, "First")
        check_values(self, "202444070902", "上昇度", 3, "Second")
        check_values(self, "202444070902", "逃先", 3, "Second")
        check_values(self, "202444070902", "差追", 3, "Fourth")
        check_values(self, "202444070902", "騎手", 4, "First")
        check_values(self, "202444070902", "逃先", 5, "First")
        check_values(self, "202444070902", "差追", 5, "First")
        check_values(self, "202444070902", "逃先", 6, "Third")
        check_values(self, "202444070902", "調教師", 6, "Fourth")
        check_values(self, "202444070902", "上昇度", 8, "First")
        check_values(self, "202444070902", "調教師", 8, "Second")
        check_values(self, "202444070902", "騎手", 10, "Third")
        check_values(self, "202444070902", "血統", 10, "Third")
        check_values(self, "202444070902", "騎手", 11, "Second")
        check_values(self, "202444070902", "血統", 11, "Second")
        check_values(self, "202444070902", "騎手", 12, "Fourth")
        check_values(self, "202444070902", "血統", 12, "Fourth")
        check_values(self, "202444070902", "上昇度", 13, "Third")
        check_values(self, "202444070902", "逃先", 13, "Fourth")
        check_values(self, "202444070902", "差追", 13, "Second")
        check_values(self, "202444070902", "調教師", 13, "First")
        check_values(self, "202444070902", "上昇度", 14, "Fourth")
        check_values(self, "202444070902", "調教師", 14, "Third")
        check_values(self, "202444070902", "rising", 3, "First")
        check_values(self, "202444070902", "rising", 5, "Second")
        check_values(self, "202444070902", "rising", 8, "Third")
        check_values(self, "202444070902", "rising", 13, "Fourth")
        check_values(self, "202444070902", "precede", 1, "Fourth")
        check_values(self, "202444070902", "precede", 3, "Second")
        check_values(self, "202444070902", "precede", 5, "First")
        check_values(self, "202444070902", "precede", 13, "Third")
        check_values(self, "202444070902", "spurt", 3, "Second")
        check_values(self, "202444070902", "spurt", 5, "First")
        check_values(self, "202444070902", "spurt", 8, "Fourth")
        check_values(self, "202444070902", "spurt", 13, "Third")
        check_values(self, "202444070902", "jockey", 3, "Second")
        check_values(self, "202444070902", "jockey", 5, "First")
        check_values(self, "202444070902", "jockey", 8, "Third")
        check_values(self, "202444070902", "jockey", 13, "Fourth")
        check_values(self, "202444070902", "trainer", 3, "Fourth")
        check_values(self, "202444070902", "trainer", 5, "Second")
        check_values(self, "202444070902", "trainer", 8, "Third")
        check_values(self, "202444070902", "trainer", 13, "First")
        check_values(self, "202444070902", "pedigree", 3, "Second")
        check_values(self, "202444070902", "pedigree", 5, "First")
        check_values(self, "202444070902", "pedigree", 8, "Third")
        check_values(self, "202444070902", "pedigree", 13, "Fourth")

class HorseRacingTipParserForPageYosoCPRaceTest(TestCase):
    def test_new_tips(self):
        page_source = PageYosoCp.make_dummy_instance(category='race', race_id='202408040811')
        self.assertTrue(HorseRacingTipParserForPageYosoCp(page_source=page_source).parser_init() is not None)
        HorseRacingTipParserForPageYosoCp.objects.all().delete()
        HorseRacingTipParserForPageYosoCp.new_tips()
        self.assertTrue(HorseRacingTipParserForPageYosoCp.objects.all().exists())

        check_values(self, "202408040811", "上昇度", 1, "Second")
        check_values(self, "202408040811", "差追", 1, "Second")
        check_values(self, "202408040811", "調教師", 1, "Second")
        check_values(self, "202408040811", "差追", 2, "Fourth")
        check_values(self, "202408040811", "騎手", 2, "Second")
        check_values(self, "202408040811", "逃先", 3, "Third")
        check_values(self, "202408040811", "差追", 4, "Third")
        check_values(self, "202408040811", "騎手", 4, "First")
        check_values(self, "202408040811", "調教師", 4, "Third")
        check_values(self, "202408040811", "逃先", 5, "First")
        check_values(self, "202408040811", "上昇度", 6, "Fourth")
        check_values(self, "202408040811", "調教師", 6, "Fourth")
        check_values(self, "202408040811", "逃先", 7, "Fourth")
        check_values(self, "202408040811", "騎手", 7, "Fourth")
        check_values(self, "202408040811", "調教師", 8, "First")
        check_values(self, "202408040811", "差追", 9, "First")
        check_values(self, "202408040811", "血統", 9, "Second")
        check_values(self, "202408040811", "上昇度", 10, "Third")
        check_values(self, "202408040811", "騎手", 10, "Third")
        check_values(self, "202408040811", "血統", 10, "First")
        check_values(self, "202408040811", "血統", 11, "Third")
        check_values(self, "202408040811", "血統", 12, "Fourth")
        check_values(self, "202408040811", "上昇度", 13, "First")
        check_values(self, "202408040811", "逃先", 13, "Second")
        check_values(self, "202408040811", "rising", 1, "First")
        check_values(self, "202408040811", "rising", 2, "Third")
        check_values(self, "202408040811", "rising", 4, "Second")
        check_values(self, "202408040811", "rising", 10, "Fourth")
        check_values(self, "202408040811", "precede", 2, "Second")
        check_values(self, "202408040811", "precede", 3, "Third")
        check_values(self, "202408040811", "precede", 5, "First")
        check_values(self, "202408040811", "precede", 13, "Fourth")
        check_values(self, "202408040811", "spurt", 1, "Third")
        check_values(self, "202408040811", "spurt", 2, "Second")
        check_values(self, "202408040811", "spurt", 4, "First")
        check_values(self, "202408040811", "spurt", 9, "Fourth")
        check_values(self, "202408040811", "jockey", 1, "Third")
        check_values(self, "202408040811", "jockey", 2, "Second")
        check_values(self, "202408040811", "jockey", 4, "First")
        check_values(self, "202408040811", "jockey", 12, "Fourth")
        check_values(self, "202408040811", "trainer", 1, "Third")
        check_values(self, "202408040811", "trainer", 2, "Second")
        check_values(self, "202408040811", "trainer", 4, "First")
        check_values(self, "202408040811", "trainer", 12, "Fourth")
        check_values(self, "202408040811", "pedigree", 1, "Third")
        check_values(self, "202408040811", "pedigree", 2, "First")
        check_values(self, "202408040811", "pedigree", 4, "Second")
        check_values(self, "202408040811", "pedigree", 12, "Fourth")

class HorseRacingTipParserForPageYosoNarTest(TestCase):
    def test_new_tips(self):
        page_source = PageYoso.make_dummy_instance(category='nar', race_id='202444070902')
        self.assertTrue(HorseRacingTipParserForPageYoso(page_source=page_source).parser_init() is not None)
        HorseRacingTipParserForPageYoso.objects.all().delete()
        HorseRacingTipParserForPageYoso.new_tips()
        self.assertTrue(HorseRacingTipParserForPageYoso.objects.all().exists())

        check_values(self, "202444070902", "浅野", 1, "Fourth")
        check_values(self, "202444070902", "浅野", 3, "Second")
        check_values(self, "202444070902", "浅野", 8, "Star")
        check_values(self, "202444070902", "浅野", 12, "Third")
        check_values(self, "202444070902", "浅野", 13, "First")
        check_values(self, "202444070902", "CP予想", 3, "Third")
        check_values(self, "202444070902", "CP予想", 5, "Second")
        check_values(self, "202444070902", "CP予想", 8, "Fourth")
        check_values(self, "202444070902", "CP予想", 13, "First")


class HorseRacingTipParserForPageYosoRaceTest(TestCase):
    def test_new_tips(self):
        page_source = PageYoso.make_dummy_instance(category='race', race_id='202408040811')
        self.assertTrue(HorseRacingTipParserForPageYoso(page_source=page_source).parser_init() is not None)
        HorseRacingTipParserForPageYoso.objects.all().delete()
        HorseRacingTipParserForPageYoso.new_tips()
        self.assertTrue(HorseRacingTipParserForPageYoso.objects.all().exists())

        check_values(self, "202408040811", "本紙", 1, "Star")
        check_values(self, "202408040811", "本紙", 2, "Fourth")
        check_values(self, "202408040811", "本紙", 5, "Third")
        check_values(self, "202408040811", "本紙", 7, "Second")
        check_values(self, "202408040811", "本紙", 9, "Fourth")
        check_values(self, "202408040811", "本紙", 10, "Fourth")
        check_values(self, "202408040811", "本紙", 12, "First")
        check_values(self, "202408040811", "須田", 1, "Fourth")
        check_values(self, "202408040811", "須田", 2, "Star")
        check_values(self, "202408040811", "須田", 3, "Fourth")
        check_values(self, "202408040811", "須田", 4, "Fourth")
        check_values(self, "202408040811", "須田", 7, "First")
        check_values(self, "202408040811", "須田", 10, "Second")
        check_values(self, "202408040811", "須田", 11, "Fourth")
        check_values(self, "202408040811", "須田", 12, "Third")
        check_values(self, "202408040811", "丹下", 1, "Fourth")
        check_values(self, "202408040811", "丹下", 2, "Second")
        check_values(self, "202408040811", "丹下", 3, "Star")
        check_values(self, "202408040811", "丹下", 4, "First")
        check_values(self, "202408040811", "丹下", 10, "Fourth")
        check_values(self, "202408040811", "丹下", 12, "Third")
        check_values(self, "202408040811", "丹下", 13, "Fourth")
        check_values(self, "202408040811", "田沼", 2, "Fourth")
        check_values(self, "202408040811", "田沼", 3, "Second")
        check_values(self, "202408040811", "田沼", 4, "Third")
        check_values(self, "202408040811", "田沼", 7, "Fourth")
        check_values(self, "202408040811", "田沼", 9, "Star")
        check_values(self, "202408040811", "田沼", 10, "First")
        check_values(self, "202408040811", "田沼", 12, "Fourth")
        check_values(self, "202408040811", "小林", 2, "Fourth")
        check_values(self, "202408040811", "小林", 3, "First")
        check_values(self, "202408040811", "小林", 4, "Star")
        check_values(self, "202408040811", "小林", 5, "Third")
        check_values(self, "202408040811", "小林", 7, "Second")
        check_values(self, "202408040811", "小林", 10, "Fourth")
        check_values(self, "202408040811", "小林", 12, "Fourth")
        check_values(self, "202408040811", "藤村", 2, "Fourth")
        check_values(self, "202408040811", "藤村", 4, "Fourth")
        check_values(self, "202408040811", "藤村", 5, "Second")
        check_values(self, "202408040811", "藤村", 7, "Star")
        check_values(self, "202408040811", "藤村", 9, "Third")
        check_values(self, "202408040811", "藤村", 12, "First")
        check_values(self, "202408040811", "藤村", 13, "Fourth")
        check_values(self, "202408040811", "大石川", 1, "Fourth")
        check_values(self, "202408040811", "大石川", 2, "First")
        check_values(self, "202408040811", "大石川", 3, "Second")
        check_values(self, "202408040811", "大石川", 4, "Fourth")
        check_values(self, "202408040811", "大石川", 7, "Third")
        check_values(self, "202408040811", "大石川", 12, "Star")
        check_values(self, "202408040811", "大石川", 13, "Fourth")
        check_values(self, "202408040811", "CP予想", 1, "Third")
        check_values(self, "202408040811", "CP予想", 2, "First")
        check_values(self, "202408040811", "CP予想", 4, "Second")
        check_values(self, "202408040811", "CP予想", 12, "Fourth")
        check_values(self, "202408040811", "デスク", 2, "Fourth")
        check_values(self, "202408040811", "デスク", 3, "Fourth")
        check_values(self, "202408040811", "デスク", 4, "Fourth")
        check_values(self, "202408040811", "デスク", 5, "Star")
        check_values(self, "202408040811", "デスク", 7, "Second")
        check_values(self, "202408040811", "デスク", 10, "Third")
        check_values(self, "202408040811", "デスク", 12, "First")
        check_values(self, "202408040811", "鈴木麻", 2, "First")
        check_values(self, "202408040811", "鈴木正", 1, "Fourth")
        check_values(self, "202408040811", "鈴木正", 2, "First")
        check_values(self, "202408040811", "鈴木正", 3, "Star")
        check_values(self, "202408040811", "鈴木正", 4, "Second")
        check_values(self, "202408040811", "鈴木正", 7, "Third")
        check_values(self, "202408040811", "鈴木正", 10, "Fourth")
        check_values(self, "202408040811", "伊吹", 1, "Third")
        check_values(self, "202408040811", "伊吹", 2, "Star")
        check_values(self, "202408040811", "伊吹", 3, "Second")
        check_values(self, "202408040811", "伊吹", 4, "Fourth")
        check_values(self, "202408040811", "伊吹", 9, "Fourth")
        check_values(self, "202408040811", "伊吹", 10, "First")