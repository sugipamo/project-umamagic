# Generated by Django 5.0.4 on 2024-05-05 15:01

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='EventCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('use_method', models.CharField(default='test.default_methods', max_length=255)),
                ('need_driver', models.BooleanField(default=False)),
                ('page_load_strategy', models.CharField(default='eager', max_length=255)),
                ('schedule_str', models.CharField(default='0', max_length=255, null=True)),
                ('parallel_limit', models.IntegerField(default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='HtmlDocuments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=255)),
                ('url', models.URLField()),
                ('html', models.TextField()),
                ('parsed', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='LoginForScraping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain', models.CharField(max_length=255)),
                ('loggined', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('race_id', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='PageCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='EventSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('status', models.IntegerField(choices=[(1, '待機'), (2, '実行中'), (3, '完了'), (4, 'エラー')], default=1)),
                ('nextexecutedatetime', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('schedule_str', models.CharField(default='0', max_length=255, null=True)),
                ('latestcalled_at', models.DateTimeField(blank=True, null=True)),
                ('errormessage', models.TextField(blank=True, null=True)),
                ('memo', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='scraping.eventcategory')),
            ],
        ),
        migrations.CreateModel(
            name='EventArgs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=255)),
                ('value', models.TextField()),
                ('memo', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('event_schedule', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='scraping.eventschedule')),
            ],
        ),
        migrations.CreateModel(
            name='PageDbNetkeiba',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='scraping.page')),
                ('html', models.BinaryField(blank=True, null=True)),
            ],
            bases=('scraping.page',),
        ),
        migrations.CreateModel(
            name='PageResult',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='scraping.page')),
                ('html', models.BinaryField(blank=True, null=True)),
            ],
            bases=('scraping.page',),
        ),
        migrations.CreateModel(
            name='PageShutuba',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='scraping.page')),
                ('html', models.BinaryField(blank=True, null=True)),
            ],
            bases=('scraping.page',),
        ),
        migrations.AddField(
            model_name='page',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='scraping.pagecategory'),
        ),
    ]
