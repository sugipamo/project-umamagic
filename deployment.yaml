---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: django
spec:
  replicas: 1
  selector:
    matchLabels:
      app: django
  template:
    metadata:
      labels:
        app: django
    spec:
      containers:
      - name: django
        image: localhost:5000/django:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
        envFrom:
        - configMapRef:
            name: app-config
        - secretRef:
            name: app-secrets
        tty: true
        command: ["python"]
        args: ["manage.py", "runserver", "0.0.0.0:8000"]

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cron
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cron
  template:
    metadata:
      labels:
        app: cron
    spec:
      containers:
      - name: cron
        image: localhost:5000/cron:latest
        imagePullPolicy: Always
        envFrom:
        - configMapRef:
            name: app-config
        - secretRef:
            name: app-secrets

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - name: mysql
        image: mysql:8.0.36
        args: ["mysqld", "--character-set-server=utf8mb4", "--collation-server=utf8mb4_bin"]
        envFrom:
        - secretRef:
            name: app-secrets
        volumeMounts:
        - name: mysql-data
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-data
        persistentVolumeClaim:
          claimName: mysql-pvc

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: selenium
spec:
  replicas: 1
  selector:
    matchLabels:
      app: selenium
  template:
    metadata:
      labels:
        app: selenium
    spec:
      containers:
      - name: selenium
        image: selenium/standalone-chrome
        ports:
        - containerPort: 4444
        - containerPort: 7900
        envFrom:
        - configMapRef:
            name: app-config
        - secretRef:
            name: app-secrets
        volumeMounts:
        - name: shm-volume
          mountPath: /dev/shm
      volumes:
      - name: shm-volume
        emptyDir: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: phpmyadmin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: phpmyadmin
  template:
    metadata:
      labels:
        app: phpmyadmin
    spec:
      containers:
      - name: phpmyadmin
        image: phpmyadmin/phpmyadmin
        ports:
        - containerPort: 80
        envFrom:
        - secretRef:
            name: app-secrets
            
---
apiVersion: v1
kind: Service
metadata:
  name: django-service
spec:
  type: NodePort
  selector:
    app: django
  ports:
  - protocol: TCP
    port: 8000       # Djangoコンテナ内でリッスンするポート
    targetPort: 8000 # Deployment内のコンテナポート
    nodePort: 30080  # クラスター外部からアクセスするポート（30000-32767の範囲で指定）

---
apiVersion: v1
kind: Service
metadata:
  name: mysql
spec:
  type: ClusterIP
  selector:
    app: mysql
  ports:
    - protocol: TCP
      port: 3306        # MySQLのデフォルトポート
      targetPort: 3306  # MySQLコンテナのポート
